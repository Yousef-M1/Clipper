# Generated by Django 5.0.2 on 2025-09-18 17:56

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AvatarCharacter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Character name (e.g., 'Sarah', 'Tech Guru Mike')", max_length=100)),
                ('description', models.TextField(help_text='Character description and personality')),
                ('avatar_image', models.ImageField(help_text='Base image for this character', upload_to='avatars/characters/')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('neutral', 'Neutral')], default='neutral', max_length=10)),
                ('voice_style', models.CharField(choices=[('natural', 'Natural'), ('professional', 'Professional'), ('casual', 'Casual'), ('energetic', 'Energetic'), ('calm', 'Calm')], default='natural', help_text='Default voice style for this character', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AvatarProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Project title', max_length=200)),
                ('script', models.TextField(help_text='Text script for the avatar to speak')),
                ('custom_avatar_image', models.ImageField(blank=True, help_text='Custom avatar image (overrides character)', null=True, upload_to='avatars/custom/')),
                ('voice_speed', models.FloatField(default=1.0, help_text='Voice speed multiplier (0.5-2.0)', validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(2.0)])),
                ('voice_pitch', models.FloatField(default=1.0, help_text='Voice pitch multiplier (0.5-2.0)', validators=[django.core.validators.MinValueValidator(0.5), django.core.validators.MaxValueValidator(2.0)])),
                ('aspect_ratio', models.CharField(choices=[('16:9', 'Landscape (16:9)'), ('9:16', 'Portrait/TikTok (9:16)'), ('1:1', 'Square (1:1)')], default='16:9', max_length=10)),
                ('video_quality', models.CharField(choices=[('720p', '720p HD'), ('1080p', '1080p Full HD')], default='1080p', max_length=10)),
                ('background_color', models.CharField(default='#000000', help_text='Background color in hex format', max_length=7)),
                ('background_image', models.ImageField(blank=True, help_text='Custom background image', null=True, upload_to='avatars/backgrounds/')),
                ('lip_sync_model', models.CharField(choices=[('wav2lip', 'Wav2Lip'), ('wav2lipv2', 'Wav2Lip v2'), ('sadtalker', 'SadTalker')], default='wav2lipv2', max_length=20)),
                ('enable_emotions', models.BooleanField(default=True, help_text='Enable emotion-based facial expressions')),
                ('head_movement_intensity', models.FloatField(default=0.5, help_text='Head movement intensity (0.0-1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('generated_audio', models.FileField(blank=True, help_text='Generated TTS audio file', null=True, upload_to='ai_influencer/audio/')),
                ('final_video', models.FileField(blank=True, help_text='Final generated video', null=True, upload_to='ai_influencer/videos/')),
                ('thumbnail', models.ImageField(blank=True, help_text='Video thumbnail', null=True, upload_to='ai_influencer/thumbnails/')),
                ('video_duration', models.FloatField(blank=True, help_text='Video duration in seconds', null=True)),
                ('file_size_mb', models.FloatField(blank=True, help_text='File size in MB', null=True)),
                ('processing_time', models.IntegerField(blank=True, help_text='Processing time in seconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('character', models.ForeignKey(blank=True, help_text='Predefined character to use', null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_influencer.avatarcharacter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avatar_projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('started', 'Started'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=20)),
                ('message', models.TextField(blank=True)),
                ('processing_time', models.FloatField(blank=True, help_text='Step processing time in seconds', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_logs', to='ai_influencer.avatarproject')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='VoiceProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Voice name (e.g., 'Emma - English Female')", max_length=100)),
                ('voice_id', models.CharField(help_text="Voice identifier for TTS engine (e.g., 'en-US-EmmaNeural')", max_length=100)),
                ('language', models.CharField(default='en-US', max_length=10)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('engine', models.CharField(choices=[('edge_tts', 'Edge TTS'), ('chatterbox', 'Chatterbox'), ('paddle_tts', 'Paddle TTS'), ('openai', 'OpenAI TTS')], default='edge_tts', max_length=20)),
                ('sample_rate', models.IntegerField(default=22050)),
                ('is_premium', models.BooleanField(default=False, help_text='Requires premium subscription')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['language', 'gender', 'name'],
                'unique_together': {('voice_id', 'engine')},
            },
        ),
        migrations.AddField(
            model_name='avatarproject',
            name='voice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ai_influencer.voiceprofile'),
        ),
    ]
