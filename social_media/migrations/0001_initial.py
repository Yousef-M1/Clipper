# Generated by Django 5.0.2 on 2025-09-15 07:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SocialPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('tiktok', 'TikTok'), ('instagram', 'Instagram'), ('youtube', 'YouTube'), ('twitter', 'Twitter/X'), ('facebook', 'Facebook'), ('linkedin', 'LinkedIn')], max_length=20, unique=True)),
                ('display_name', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('api_version', models.CharField(default='v1', max_length=10)),
                ('max_video_duration', models.IntegerField(help_text='Maximum video duration in seconds')),
                ('max_file_size_mb', models.FloatField(help_text='Maximum file size in MB')),
                ('supported_formats', models.JSONField(default=list)),
                ('aspect_ratios', models.JSONField(default=list)),
                ('supports_scheduling', models.BooleanField(default=True)),
                ('supports_analytics', models.BooleanField(default=True)),
                ('supports_captions', models.BooleanField(default=True)),
                ('supports_hashtags', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['display_name'],
            },
        ),
        migrations.CreateModel(
            name='ContentCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('timezone_name', models.CharField(default='UTC', max_length=50)),
                ('posting_times', models.JSONField(default=list)),
                ('post_frequency', models.JSONField(default=dict)),
                ('themes', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_calendars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='social_posts/')),
                ('video_url', models.URLField(blank=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='thumbnails/')),
                ('caption', models.TextField(blank=True)),
                ('hashtags', models.JSONField(default=list)),
                ('mentions', models.JSONField(default=list)),
                ('scheduled_time', models.DateTimeField()),
                ('timezone_name', models.CharField(default='UTC', max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('posting', 'Posting'), ('posted', 'Posted'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Normal'), (3, 'High'), (4, 'Urgent')], default=2)),
                ('platform_post_id', models.CharField(blank=True, max_length=100)),
                ('platform_url', models.URLField(blank=True)),
                ('platform_response', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scheduled_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='PostAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('views', models.BigIntegerField(default=0)),
                ('likes', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
                ('saves', models.IntegerField(default=0)),
                ('reach', models.BigIntegerField(default=0)),
                ('impressions', models.BigIntegerField(default=0)),
                ('engagement_rate', models.FloatField(default=0.0)),
                ('platform_metrics', models.JSONField(default=dict)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='social_media.scheduledpost')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SocialAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=100)),
                ('display_name', models.CharField(blank=True, max_length=200)),
                ('profile_picture', models.URLField(blank=True)),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField(blank=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('scope', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('connected', 'Connected'), ('expired', 'Token Expired'), ('error', 'Connection Error'), ('disconnected', 'Disconnected')], default='connected', max_length=20)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('follower_count', models.IntegerField(default=0)),
                ('is_business_account', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_accounts', to=settings.AUTH_USER_MODEL)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.socialplatform')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='scheduledpost',
            name='social_account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social_media.socialaccount'),
        ),
        migrations.CreateModel(
            name='PostTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('caption_template', models.TextField(blank=True, help_text='Use {variables} for dynamic content')),
                ('hashtags', models.JSONField(default=list)),
                ('default_time_offset', models.IntegerField(default=0, help_text='Minutes from now')),
                ('post_frequency', models.CharField(blank=True, max_length=20)),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_templates', to=settings.AUTH_USER_MODEL)),
                ('default_platforms', models.ManyToManyField(blank=True, to='social_media.socialplatform')),
            ],
            options={
                'ordering': ['-last_used', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('post_published', 'Post Published'), ('post_failed', 'Post Failed'), ('analytics_update', 'Analytics Update'), ('account_deauthorized', 'Account Deauthorized'), ('rate_limit_exceeded', 'Rate Limit Exceeded')], max_length=30)),
                ('platform_event_id', models.CharField(blank=True, max_length=100)),
                ('event_data', models.JSONField(default=dict)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('social_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_events', to='social_media.socialaccount')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='scheduledpost',
            index=models.Index(fields=['status', 'scheduled_time'], name='social_medi_status_9379c1_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledpost',
            index=models.Index(fields=['user', 'status'], name='social_medi_user_id_f361f4_idx'),
        ),
        migrations.AddIndex(
            model_name='scheduledpost',
            index=models.Index(fields=['social_account', 'status'], name='social_medi_social__0e2b11_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='socialaccount',
            unique_together={('user', 'platform', 'account_id')},
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['processed', 'created_at'], name='social_medi_process_113f4c_idx'),
        ),
        migrations.AddIndex(
            model_name='webhookevent',
            index=models.Index(fields=['social_account', 'event_type'], name='social_medi_social__04dd57_idx'),
        ),
    ]
